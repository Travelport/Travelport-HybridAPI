/* 
 * CatalogProductOfferingsResource
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 11.1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// Defines FareRuleCategoryEnum
    /// </summary>
    
    [JsonConverter(typeof(StringEnumConverter))]
    
    public enum FareRuleCategoryEnum
    {
        
        /// <summary>
        /// Enum AdvanceReservationsTicketing for value: AdvanceReservationsTicketing
        /// </summary>
        [EnumMember(Value = "AdvanceReservationsTicketing")]
        AdvanceReservationsTicketing = 1,
        
        /// <summary>
        /// Enum MinimumStay for value: MinimumStay
        /// </summary>
        [EnumMember(Value = "MinimumStay")]
        MinimumStay = 2,
        
        /// <summary>
        /// Enum MaximumStay for value: MaximumStay
        /// </summary>
        [EnumMember(Value = "MaximumStay")]
        MaximumStay = 3,
        
        /// <summary>
        /// Enum Stopovers for value: Stopovers
        /// </summary>
        [EnumMember(Value = "Stopovers")]
        Stopovers = 4,
        
        /// <summary>
        /// Enum Penalties for value: Penalties
        /// </summary>
        [EnumMember(Value = "Penalties")]
        Penalties = 5,
        
        /// <summary>
        /// Enum Eligibility for value: Eligibility
        /// </summary>
        [EnumMember(Value = "Eligibility")]
        Eligibility = 6,
        
        /// <summary>
        /// Enum DayTime for value: DayTime
        /// </summary>
        [EnumMember(Value = "DayTime")]
        DayTime = 7,
        
        /// <summary>
        /// Enum Seasonality for value: Seasonality
        /// </summary>
        [EnumMember(Value = "Seasonality")]
        Seasonality = 8,
        
        /// <summary>
        /// Enum FlightApplication for value: FlightApplication
        /// </summary>
        [EnumMember(Value = "FlightApplication")]
        FlightApplication = 9,
        
        /// <summary>
        /// Enum Transfers for value: Transfers
        /// </summary>
        [EnumMember(Value = "Transfers")]
        Transfers = 10,
        
        /// <summary>
        /// Enum Combinations for value: Combinations
        /// </summary>
        [EnumMember(Value = "Combinations")]
        Combinations = 11,
        
        /// <summary>
        /// Enum BlackoutDates for value: BlackoutDates
        /// </summary>
        [EnumMember(Value = "BlackoutDates")]
        BlackoutDates = 12,
        
        /// <summary>
        /// Enum Surcharges for value: Surcharges
        /// </summary>
        [EnumMember(Value = "Surcharges")]
        Surcharges = 13,
        
        /// <summary>
        /// Enum AccompaniedTravel for value: AccompaniedTravel
        /// </summary>
        [EnumMember(Value = "AccompaniedTravel")]
        AccompaniedTravel = 14,
        
        /// <summary>
        /// Enum TravelRestrictions for value: TravelRestrictions
        /// </summary>
        [EnumMember(Value = "TravelRestrictions")]
        TravelRestrictions = 15,
        
        /// <summary>
        /// Enum SalesRestrictions for value: SalesRestrictions
        /// </summary>
        [EnumMember(Value = "SalesRestrictions")]
        SalesRestrictions = 16,
        
        /// <summary>
        /// Enum HIPMileageExeptions for value: HIPMileageExeptions
        /// </summary>
        [EnumMember(Value = "HIPMileageExeptions")]
        HIPMileageExeptions = 17,
        
        /// <summary>
        /// Enum TicketEndorsements for value: TicketEndorsements
        /// </summary>
        [EnumMember(Value = "TicketEndorsements")]
        TicketEndorsements = 18,
        
        /// <summary>
        /// Enum ChildrenDiscounts for value: ChildrenDiscounts
        /// </summary>
        [EnumMember(Value = "ChildrenDiscounts")]
        ChildrenDiscounts = 19,
        
        /// <summary>
        /// Enum TourConductorDiscounts for value: TourConductorDiscounts
        /// </summary>
        [EnumMember(Value = "TourConductorDiscounts")]
        TourConductorDiscounts = 20,
        
        /// <summary>
        /// Enum AgentDiscounts for value: AgentDiscounts
        /// </summary>
        [EnumMember(Value = "AgentDiscounts")]
        AgentDiscounts = 21,
        
        /// <summary>
        /// Enum AllOtherDiscounts for value: AllOtherDiscounts
        /// </summary>
        [EnumMember(Value = "AllOtherDiscounts")]
        AllOtherDiscounts = 22,
        
        /// <summary>
        /// Enum MiscellaneousProvisions for value: MiscellaneousProvisions
        /// </summary>
        [EnumMember(Value = "MiscellaneousProvisions")]
        MiscellaneousProvisions = 23,
        
        /// <summary>
        /// Enum FareByRule for value: FareByRule
        /// </summary>
        [EnumMember(Value = "FareByRule")]
        FareByRule = 24,
        
        /// <summary>
        /// Enum Groups for value: Groups
        /// </summary>
        [EnumMember(Value = "Groups")]
        Groups = 25,
        
        /// <summary>
        /// Enum Tours for value: Tours
        /// </summary>
        [EnumMember(Value = "Tours")]
        Tours = 26,
        
        /// <summary>
        /// Enum VisitAnotherCountry for value: VisitAnotherCountry
        /// </summary>
        [EnumMember(Value = "VisitAnotherCountry")]
        VisitAnotherCountry = 27,
        
        /// <summary>
        /// Enum Deposits for value: Deposits
        /// </summary>
        [EnumMember(Value = "Deposits")]
        Deposits = 28,
        
        /// <summary>
        /// Enum VoluntaryChanges for value: VoluntaryChanges
        /// </summary>
        [EnumMember(Value = "VoluntaryChanges")]
        VoluntaryChanges = 29,
        
        /// <summary>
        /// Enum VoluntaryRefunds for value: VoluntaryRefunds
        /// </summary>
        [EnumMember(Value = "VoluntaryRefunds")]
        VoluntaryRefunds = 30,
        
        /// <summary>
        /// Enum NegotiatedFares for value: NegotiatedFares
        /// </summary>
        [EnumMember(Value = "NegotiatedFares")]
        NegotiatedFares = 31,
        
        /// <summary>
        /// Enum ApplicationAndOtherConditions for value: ApplicationAndOtherConditions
        /// </summary>
        [EnumMember(Value = "ApplicationAndOtherConditions")]
        ApplicationAndOtherConditions = 32
    }

}

/* 
 * CatalogProductOfferingsResource
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 11.1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// The audience targeted for the brand information
    /// </summary>
    /// <value>The audience targeted for the brand information</value>
    
    [JsonConverter(typeof(StringEnumConverter))]
    
    public enum BrandTargetEnum
    {
        
        /// <summary>
        /// Enum Strapline for value: Strapline
        /// </summary>
        [EnumMember(Value = "Strapline")]
        Strapline = 1,
        
        /// <summary>
        /// Enum MarketingAgent for value: MarketingAgent
        /// </summary>
        [EnumMember(Value = "MarketingAgent")]
        MarketingAgent = 2,
        
        /// <summary>
        /// Enum MarketingConsumer for value: MarketingConsumer
        /// </summary>
        [EnumMember(Value = "MarketingConsumer")]
        MarketingConsumer = 3,
        
        /// <summary>
        /// Enum External for value: External
        /// </summary>
        [EnumMember(Value = "External")]
        External = 4,
        
        /// <summary>
        /// Enum Short for value: Short
        /// </summary>
        [EnumMember(Value = "Short")]
        Short = 5,
        
        /// <summary>
        /// Enum Agent for value: Agent
        /// </summary>
        [EnumMember(Value = "Agent")]
        Agent = 6,
        
        /// <summary>
        /// Enum Consumer for value: Consumer
        /// </summary>
        [EnumMember(Value = "Consumer")]
        Consumer = 7,
        
        /// <summary>
        /// Enum Upsell for value: Upsell
        /// </summary>
        [EnumMember(Value = "Upsell")]
        Upsell = 8
    }

}

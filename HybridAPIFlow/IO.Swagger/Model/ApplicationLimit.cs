/* 
 * CatalogProductOfferingsResource
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 11.1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// ApplicationLimit
    /// </summary>
    [DataContract]
    public partial class ApplicationLimit :  IEquatable<ApplicationLimit>, IValidatableObject
    {
        /// <summary>
        /// Assigned Type: ctan-1100:ApplicableLevelEnum
        /// </summary>
        /// <value>Assigned Type: ctan-1100:ApplicableLevelEnum</value>
        [DataMember(Name="value", EmitDefaultValue=false)]
        public ApplicableLevelEnum? Value { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="ApplicationLimit" /> class.
        /// </summary>
        /// <param name="value">Assigned Type: ctan-1100:ApplicableLevelEnum.</param>
        /// <param name="start">Assigned Type: c-1100:StringTiny.</param>
        /// <param name="end">Assigned Type: c-1100:StringTiny.</param>
        public ApplicationLimit(ApplicableLevelEnum? value = default(ApplicableLevelEnum?), string start = default(string), string end = default(string))
        {
            this.Value = value;
            this.Start = start;
            this.End = end;
        }
        

        /// <summary>
        /// Assigned Type: c-1100:StringTiny
        /// </summary>
        /// <value>Assigned Type: c-1100:StringTiny</value>
        [DataMember(Name="start", EmitDefaultValue=false)]
        public string Start { get; set; }

        /// <summary>
        /// Assigned Type: c-1100:StringTiny
        /// </summary>
        /// <value>Assigned Type: c-1100:StringTiny</value>
        [DataMember(Name="end", EmitDefaultValue=false)]
        public string End { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ApplicationLimit {\n");
            sb.Append("  Value: ").Append(Value).Append("\n");
            sb.Append("  Start: ").Append(Start).Append("\n");
            sb.Append("  End: ").Append(End).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ApplicationLimit);
        }

        /// <summary>
        /// Returns true if ApplicationLimit instances are equal
        /// </summary>
        /// <param name="input">Instance of ApplicationLimit to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ApplicationLimit input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Value == input.Value ||
                    (this.Value != null &&
                    this.Value.Equals(input.Value))
                ) && 
                (
                    this.Start == input.Start ||
                    (this.Start != null &&
                    this.Start.Equals(input.Start))
                ) && 
                (
                    this.End == input.End ||
                    (this.End != null &&
                    this.End.Equals(input.End))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Value != null)
                    hashCode = hashCode * 59 + this.Value.GetHashCode();
                if (this.Start != null)
                    hashCode = hashCode * 59 + this.Start.GetHashCode();
                if (this.End != null)
                    hashCode = hashCode * 59 + this.End.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // Start (string) maxLength
            if(this.Start != null && this.Start.Length > 32)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for Start, length must be less than 32.", new [] { "Start" });
            }

            // End (string) maxLength
            if(this.End != null && this.End.Length > 32)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for End, length must be less than 32.", new [] { "End" });
            }

            yield break;
        }
    }

}
